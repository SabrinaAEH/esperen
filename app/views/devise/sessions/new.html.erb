<!DOCTYPE html>
<html>
<body>
<div class="container text-center mt-3">
  <h1>Log in</h1>
</div>
<div class="container card-container">
  <div class="row justify-content-center">
      <div class="card">
        <div class="card-body">
          <%= form_for(resource, as: resource_name, url: session_path(resource_name), html: { class: "needs-validation", novalidate: true }) do |f| %>
            <%= render "devise/shared/error_messages", resource: resource %>

            <div class="mb-3">
              <%= f.label :email, class: "form-label" %>
              <%= f.email_field :email, class: "form-control", autofocus: true, autocomplete: "email", required: true %>
              <div class="invalid-feedback">
                Please provide a valid email.
              </div>
            </div>

            <div class="mb-3">
              <%= f.label :password, class: "form-label" %>
              <%= f.password_field :password, class: "form-control", autocomplete: "current-password", required: true %>
              <div class="invalid-feedback">
                Please provide a valid password.
              </div>
            </div>

            <% if devise_mapping.rememberable? %>
              <div class="mb-3 form-check">
                <%= f.check_box :remember_me, class: "form-check-input" %>
                <%= f.label :remember_me, class: "form-check-label" %>
              </div>
            <% end %>

            <div class="mb-3">
              <%= f.submit "Log in", class: "btn btn-secondary" %>
            </div>
          <% end %>

          <%= render "devise/shared/links" %>
        </div>
      </div>
  </div>
</div>


<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      var forms = document.getElementsByClassName('needs-validation');
      // Loop over them and prevent submission
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>
</body>
</html>
